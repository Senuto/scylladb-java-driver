name: 'Tests (Driver 4.x)'

on:
  push:
    branches: [ scylla-4.*x ]
  pull_request:
    branches: [ scylla-4.*x ]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        java-version: [8]
      fail-fast: false

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'

      - name: Get POM hash
        id: get-pom-hash
        run: echo "value=${{ hashFiles('**/pom.xml') }}" >> "$GITHUB_OUTPUT"

      - name: Restore maven repository cache
        uses: actions/cache/restore@v4
        id: java-cache
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-${{ matrix.java-version }}-maven-${{ steps.get-pom-hash.outputs.value }}

      - name: Compile source and tests
        run: mvn -B compile test-compile -Dfmt.skip=true -Dclirr.skip=true -Danimal.sniffer.skip=true

      - name: Download test dependencies
        if: steps.java-cache.outputs.cache-hit != 'true'
        run: mvn -B test -Dtest=TestThatDoesNotExists -Dfmt.skip=true -Dclirr.skip=true -Danimal.sniffer.skip=true || true

      - name: Download verify dependencies
        if: steps.java-cache.outputs.cache-hit != 'true'
        run: mvn -B verify -DskipTests || true

      - name: Save maven repository cache
        uses: actions/cache/save@v4
        if: steps.java-cache.outputs.cache-hit != 'true'
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-${{ matrix.java-version }}-maven-${{ steps.get-pom-hash.outputs.value }}

  verify:
    name: Full verify
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        java-version: [8]
      fail-fast: false

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'

      - name: Restore maven repository cache
        uses: actions/cache/restore@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-${{ matrix.java-version }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Full verify
        run: mvn -B verify -DskipTests


  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        java-version: [8]
      fail-fast: false

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'

      - name: Restore maven repository cache
        uses: actions/cache/restore@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-${{ matrix.java-version }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Run unit tests
        run: mvn -B test -Dfmt.skip=true -Dclirr.skip=true -Danimal.sniffer.skip=true

      - name: Copy test results
        if: success() || failure()
        run: |
          shopt -s globstar
          mkdir unit
          cp --parents ./**/target/*-reports/*.xml unit/

      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: test-results
          path: "*/**/target/*-reports/*.xml"

  setup-integration-tests:
    name: Setup ITs
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Setup Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Fetch Scylla and Cassandra versions
        id: fetch-versions
        run: |
          pip3 install -r ci/requirements.txt
          echo "scylla-integration-tests-versions=$(python3 ci/version_fetch.py scylla-oss-stable:2 scylla-oss-rc scylla-enterprise-stable:2 scylla-enterprise-rc)" >> $GITHUB_OUTPUT
          echo "cassandra-integration-tests-versions=$(python3 ci/version_fetch.py cassandra3-stable:1 cassandra4-stable:1)" >> $GITHUB_OUTPUT
    outputs:
      scylla-integration-tests-versions: ${{ steps.fetch-versions.outputs.scylla-integration-tests-versions }}
      cassandra-integration-tests-versions: ${{ steps.fetch-versions.outputs.cassandra-integration-tests-versions }}

  cassandra-integration-tests:
    name: Cassandra ITs
    runs-on: ubuntu-latest
    needs: [setup-integration-tests]
    timeout-minutes: 90

    strategy:
      matrix:
        cassandra-version: ${{ fromJson(needs.setup-integration-tests.outputs.cassandra-integration-tests-versions) }}
        java-version: [8]
      fail-fast: false

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'

      - name: Restore maven repository cache
        uses: actions/cache/restore@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-${{ matrix.java-version }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Setup Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Setup environment
        run: |
          pip3 install https://github.com/scylladb/scylla-ccm/archive/a93125bc6ad7dd5c9694331e89dc1fb212431ffe.zip

      - name: Restore CCM image cache
        uses: actions/cache/restore@v4
        id: ccm-cache
        with:
          path: ~/.ccm/repository
          key: ccm-cassandra-${{ runner.os }}-${{ matrix.cassandra-version }}

      - name: Run integration tests on Cassandra (${{ matrix.cassandra-version }})
        run: mvn -B -e verify -Dccm.version=${{ matrix.cassandra-version }} -Dfmt.skip=true -Dclirr.skip=true -Danimal.sniffer.skip=true

      - name: Save CCM image cache
        uses: actions/cache/save@v4
        if: steps.ccm-cache.outputs.cache-hit != 'true'
        with:
          path: ~/.ccm/repository
          key: ccm-cassandra-${{ runner.os }}-${{ matrix.cassandra-version }}

      - name: Copy test results
        if: success() || failure()
        run: |
          shopt -s globstar
          mkdir cassandra-${{ matrix.cassandra-version }}
          cp --parents ./**/target/*-reports/*.xml cassandra-${{ matrix.cassandra-version }}/

      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: test-results
          path: "*/**/target/*-reports/*.xml"

      - name: Upload CCM logs
        uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: ccm-logs-cassandra-${{ matrix.cassandra-version }}
          path: /tmp/ccm*/ccm*/node*/logs/*

  scylla-integration-tests:
    name: Scylla ITs
    runs-on: ubuntu-latest
    needs: [setup-integration-tests]
    timeout-minutes: 90

    strategy:
      matrix:
        scylla-version: ${{ fromJson(needs.setup-integration-tests.outputs.scylla-integration-tests-versions) }}
        java-version: [8]
      fail-fast: false

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'

      - name: Restore maven repository cache
        uses: actions/cache/restore@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-${{ matrix.java-version }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Setup Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Setup environment
        run: |
          pip3 install https://github.com/scylladb/scylla-ccm/archive/a93125bc6ad7dd5c9694331e89dc1fb212431ffe.zip
          sudo sh -c "echo 2097152 > /proc/sys/fs/aio-max-nr"

      - name: Restore CCM image cache
        uses: actions/cache/restore@v4
        id: ccm-cache
        with:
          path: ~/.ccm/scylla-repository
          key: ccm-scylla-${{ runner.os }}-${{ matrix.scylla-version }}

      - name: Run integration tests on Scylla (${{ matrix.scylla-version }})
        run: mvn -B verify -Dccm.version=${{ matrix.scylla-version }} -Dccm.scylla=true -Dfmt.skip=true -Dclirr.skip=true -Danimal.sniffer.skip=true

      - name: Save CCM image cache
        uses: actions/cache/save@v4
        if: steps.ccm-cache.outputs.cache-hit != 'true'
        with:
          path: ~/.ccm/repository
          key: ccm-scylla-${{ runner.os }}-${{ matrix.scylla-version }}

      - name: Copy test results
        if: success() || failure()
        run: |
          shopt -s globstar
          mkdir scylla-${{ matrix.scylla-version }}
          cp --parents ./**/target/*-reports/*.xml scylla-${{ matrix.scylla-version }}/

      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: test-results
          path: "*/**/target/*-reports/*.xml"

      - name: Upload CCM logs
        uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: ccm-logs-scylla-${{ matrix.scylla-version }}
          path: /tmp/ccm*/ccm*/node*/logs/*
